
/*
 * This file was generated by the SOM Compiler.
 * FileName: cwhelp.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitih: 2.42
 */

/*
 * 
 * Copyright (c) Chris Wohlgemuth 2002
 * All rights reserved.
 * 
 * http://www.geocities.com/SiliconValley/Sector/5785/
 * http://www.os2world.com/cdwriting
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The authors name may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * 
 * cwhelp.idl
 */


/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_CWHelp_ih
#define SOM_CWHelp_ih

#pragma checkout(suspend)

#include <cwhelp.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass CWHelpCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define CWHelp_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef struct {
	char chrHelpLib[260];
} CWHelpData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef CWHelpData* SOMLINK somTP_CWHelp_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_CWHelp_DataThunk, system)
#endif
typedef somTP_CWHelp_DataThunk *somTD_CWHelp_DataThunk;

#define CWHelpGetData(somSelf) \
   (((somTD_CWHelp_DataThunk)(CWHelpCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _chrHelpLib (somThis->chrHelpLib)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(CWHelp_Class_Source) || defined(SOM_Module_cwhelp_Source))

/*
 * Trace/Debug macro
 */
#ifndef CWHelpMethodDebug
   #define CWHelpMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* CWHelpMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_CWHelpCClassData.parentMtab
#undef SOMInstance
#define SOMInstance CWHelpCClassData.parentMtab

#ifndef M_CWHelp_Class_Source
   #define M_CWHelp_Class_Source
#endif    /* M_CWHelp_Class_Source */

/*
 * Overridden method: wpSetup
 */
#pragma linkage(cwhelp_wpSetup, system)
SOM_Scope BOOL  SOMLINK cwhelp_wpSetup(CWHelp *somSelf,
		PSZ pszSetupString);
static char *somMN_CWHelpwpSetup = "WPObject::wpSetup";
static somId somId_CWHelpwpSetup = &somMN_CWHelpwpSetup;
#ifdef somId_wpSetup
#undef somId_wpSetup
#else
#define somId_wpSetup somId_CWHelpwpSetup
#endif
static somMethodProc* CWHelp_parent_WPTransient_wpSetup_resolved;
#define CWHelp_parent_WPTransient_wpSetup(somSelf,pszSetupString) \
  ((( somTD_WPObject_wpSetup ) \
    CWHelp_parent_WPTransient_wpSetup_resolved) \
	 (somSelf,pszSetupString))
#ifndef SOMGD_pmc_WPTransient_wpSetup
  #ifdef parent_WPTransient_wpSetup
     #undef parent_WPTransient_wpSetup
     #define SOMGD_pmc_WPTransient_wpSetup 1
  #else
     #define parent_WPTransient_wpSetup CWHelp_parent_WPTransient_wpSetup
  #endif /* parent_WPTransient_wpSetup */
#endif /* SOMGD_pmc_WPTransient_wpSetup */
#ifndef parent_wpSetup
     #define parent_wpSetup CWHelp_parent_WPTransient_wpSetup
#endif  /* parent_wpSetup */
#define CWHelp_parents_wpSetup(somSelf,pszSetupString) (\
   CWHelp_parent_WPTransient_wpSetup(somSelf,pszSetupString))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct CWHelpClassDataStructure SOMDLINK CWHelpClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct CWHelpCClassDataStructure SOMDLINK CWHelpCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t CWHelpOM[] = {
    {    &somId_CWHelpwpSetup,
         (somMethodProc *) cwhelp_wpSetup    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_CWHelp = "CWHelp";
#ifndef somEMC_M_CWHelp_defined
#define somEMC_M_CWHelp_defined
static char * somEMC_M_CWHelp = "M_CWHelp";
#endif
static char * somPCN_CWHelp_WPTransient = "WPTransient";

static somId somPCCWHelp[] = {
    &somPCN_CWHelp_WPTransient,
};

static somStaticClassInfo CWHelpSCI = {
    4, 0, 1, 0, 0, 0,
    CWHelp_MajorVersion, CWHelp_MinorVersion,
    sizeof(CWHelpData), CWHelp_MaxNoMethods, 1,
    &somCN_CWHelp,
    &somEMC_M_CWHelp, 0,
    somPCCWHelp,
    (somClassDataStructure *) &CWHelpClassData,
    (somCClassDataStructure *) &CWHelpCClassData,
    (somStaticMethod_t *) NULL, CWHelpOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    1, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK CWHelpNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    WPTransientNewClass(WPTransient_MajorVersion,WPTransient_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_CWHelpNewClass(M_CWHelp_MajorVersion,M_CWHelp_MinorVersion);	/* static reference */
    result = somBuildClass(1,&CWHelpSCI, somtmajorVersion, somtminorVersion);
    CWHelp_parent_WPTransient_wpSetup_resolved = 
	somParentNumResolve(CWHelpCClassData.parentMtab, 1, WPObjectClassData.wpSetup); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_CWHelp_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_CWHelp_ih
#define SOM_M_CWHelp_ih

#pragma checkout(suspend)

#include <cwhelp.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_CWHelpCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_CWHelp_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef void M_CWHelpData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(CWHelp_Class_Source) || defined(M_CWHelp_Class_Source) || defined(SOM_Module_cwhelp_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_CWHelpMethodDebug
   #define M_CWHelpMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_CWHelpMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsQueryTitle
 */
#pragma linkage(cwhelpM_wpclsQueryTitle, system)
SOM_Scope PSZ  SOMLINK cwhelpM_wpclsQueryTitle(M_CWHelp *somSelf);
static char *somMN_M_CWHelpwpclsQueryTitle = "M_WPObject::wpclsQueryTitle";
static somId somId_M_CWHelpwpclsQueryTitle = &somMN_M_CWHelpwpclsQueryTitle;
#ifdef somId_wpclsQueryTitle
#undef somId_wpclsQueryTitle
#else
#define somId_wpclsQueryTitle somId_M_CWHelpwpclsQueryTitle
#endif
static somMethodProc* M_CWHelp_parent_M_WPTransient_wpclsQueryTitle_resolved;
#define M_CWHelp_parent_M_WPTransient_wpclsQueryTitle(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryTitle ) \
    M_CWHelp_parent_M_WPTransient_wpclsQueryTitle_resolved) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPTransient_wpclsQueryTitle
  #ifdef parent_M_WPTransient_wpclsQueryTitle
     #undef parent_M_WPTransient_wpclsQueryTitle
     #define SOMGD_pmc_M_WPTransient_wpclsQueryTitle 1
  #else
     #define parent_M_WPTransient_wpclsQueryTitle M_CWHelp_parent_M_WPTransient_wpclsQueryTitle
  #endif /* parent_M_WPTransient_wpclsQueryTitle */
#endif /* SOMGD_pmc_M_WPTransient_wpclsQueryTitle */
#ifndef parent_wpclsQueryTitle
     #define parent_wpclsQueryTitle M_CWHelp_parent_M_WPTransient_wpclsQueryTitle
#endif  /* parent_wpclsQueryTitle */
#define M_CWHelp_parents_wpclsQueryTitle(somSelf) (\
   M_CWHelp_parent_M_WPTransient_wpclsQueryTitle(somSelf))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_CWHelpClassDataStructure SOMDLINK M_CWHelpClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_CWHelpCClassDataStructure SOMDLINK M_CWHelpCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_CWHelpOM[] = {
    {    &somId_M_CWHelpwpclsQueryTitle,
         (somMethodProc *) cwhelpM_wpclsQueryTitle    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_CWHelp = "M_CWHelp";
static char * somPCN_M_CWHelp_M_WPTransient = "M_WPTransient";

static somId somPCM_CWHelp[] = {
    &somPCN_M_CWHelp_M_WPTransient,
};

static somStaticClassInfo M_CWHelpSCI = {
    4, 0, 1, 0, 0, 0,
    M_CWHelp_MajorVersion, M_CWHelp_MinorVersion,
    0, M_CWHelp_MaxNoMethods, 1,
    &somCN_M_CWHelp,
    (somId) NULL, 1,
    somPCM_CWHelp,
    (somClassDataStructure *) &M_CWHelpClassData,
    (somCClassDataStructure *) &M_CWHelpCClassData,
    (somStaticMethod_t *) NULL, M_CWHelpOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_CWHelpNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClass *result;
    M_WPTransientNewClass(M_WPTransient_MajorVersion,M_WPTransient_MinorVersion);	/* static reference */
    result = somBuildClass(1,&M_CWHelpSCI, somtmajorVersion, somtminorVersion);
    M_CWHelp_parent_M_WPTransient_wpclsQueryTitle_resolved = 
	somParentNumResolve(M_CWHelpCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryTitle); 
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_CWHelp_ih */
